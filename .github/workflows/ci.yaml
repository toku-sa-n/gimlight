name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check-if-cabal-file-is-up-to-date:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      # See https://github.com/commercialhaskell/stack/issues/3697#issuecomment-353729540.
      - name: Check if the cabal file is up to date
        run: |
          mv gimlight.cabal gimlight.cabal.old
          stack build --dry-run
          diff gimlight.cabal.old gimlight.cabal

  disallow-binary:
    runs-on: ubuntu-latest
    steps:
      - name: Check if a file is a binary
        run: |
          binaries=$(git ls-files -z|xargs --null file --dereference --mime|grep 'charset=binary'|cut -d: -f1)
          if [ -n "$binaries" ]; then
            echo "Do not commit the following binary files as git does not handle them well"
            echo "$binaries"
            exit 1
          fi

  markdown-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - name: Run `markdown-lint`
        uses: DavidAnson/markdownlint-cli2-action@510b996878fc0d1a46c8a04ec86b06dbfba09de7 # v15.0.0

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - name: Install dependencies
        id: haskell-setup
        uses: haskell-actions/setup@ca7ecf7b0c7a4300227b1ab05cda52bf019c174b # v2.0.0
        with:
          enable-stack: true

      - name: Cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            .stack-root
            ${{ steps.haskell-setup.outputs.stack-root }}
          key: ${{ github.job }}-${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}
          restore-keys: ${{ github.job }}-${{ runner.os }}-${{ hashFiles('stack.yaml.lock') }}

      - name: Build
        run: stack build

      - name: Run tests
        run: stack test

  trailing-newline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - name: List all non-empty files tracked by git that do not end with a newline
        run: git ls-files | xargs -I {} sh -c '[ -s "{}" ] && echo "{}"' | xargs -I {} sh -c 'tail -c 1 {} | read -r _ || (echo "{}"; false)'
